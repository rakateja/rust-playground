{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0","program":"/Users/raka/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rust_decimal","--edition=2018","/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=d173b7e0c18ea3f7","-C","extra-filename=-d173b7e0c18ea3f7","--out-dir","/Users/raka/go/src/github.com/rakateja/rust-playground/user-api/target/rls/debug/deps","-L","dependency=/Users/raka/go/src/github.com/rakateja/rust-playground/user-api/target/rls/debug/deps","--extern","num_traits=/Users/raka/go/src/github.com/rakateja/rust-playground/user-api/target/rls/debug/deps/libnum_traits-3b24a4aa721457e9.rmeta","--extern","serde=/Users/raka/go/src/github.com/rakateja/rust-playground/user-api/target/rls/debug/deps/libserde-82cf860706ce3979.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raka/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raka/go/src/github.com/rakateja/rust-playground/user-api/target/rls/debug/deps/librust_decimal-d173b7e0c18ea3f7.rmeta"},"prelude":{"crate_id":{"name":"rust_decimal","disambiguator":[11036915792470248272,11908270610103685649]},"crate_root":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src","external_crates":[{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","num":15,"id":{"name":"num_traits","disambiguator":[11316069760216878245,15776062827117402542]}},{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","num":16,"id":{"name":"serde","disambiguator":[10103320856037432247,14767499786443704641]}}],"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":0,"byte_end":1714,"line_start":1,"line_end":56,"column_start":1,"column_end":21}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1438,"byte_end":1445,"line_start":45,"line_end":45,"column_start":19,"column_end":26},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1447,"byte_end":1463,"line_start":45,"line_end":45,"column_start":28,"column_end":44},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1481,"byte_end":1486,"line_start":46,"line_end":46,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1527,"byte_end":1534,"line_start":49,"line_end":49,"column_start":21,"column_end":28},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1536,"byte_end":1552,"line_start":49,"line_end":49,"column_start":30,"column_end":46},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":15,"index":151},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1580,"byte_end":1593,"line_start":50,"line_end":50,"column_start":26,"column_end":39},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":15,"index":312},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1595,"byte_end":1598,"line_start":50,"line_end":50,"column_start":41,"column_end":44},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":15,"index":125},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1600,"byte_end":1611,"line_start":50,"line_end":50,"column_start":46,"column_end":57},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":15,"index":302},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1613,"byte_end":1617,"line_start":50,"line_end":50,"column_start":59,"column_end":63},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":2,"index":7699},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1642,"byte_end":1649,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"alias_span":null,"name":"FromStr","value":"","parent":{"krate":0,"index":353}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":0,"byte_end":1714,"line_start":1,"line_end":56,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":305},{"krate":0,"index":316},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":"\n A Decimal implementation written in pure Rust suitable\n for financial calculations that require significant integral\n and fractional digits with no round-off errors.","sig":null,"attributes":[{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":0,"byte_end":3,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"! A Decimal implementation written in pure Rust suitable","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":4,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"! for financial calculations that require significant integral","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":63,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"! and fractional digits with no round-off errors.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":128,"byte_end":179,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":180,"byte_end":183,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! The binary representation consists of a 96 bit integer number,","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":184,"byte_end":250,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"! a scaling factor used to specify the decimal fraction and a 1","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":251,"byte_end":316,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"! bit sign. Because of this representation, trailing zeros are","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":317,"byte_end":381,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"! preserved and may be exposed when in string form. These can be","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":382,"byte_end":448,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"! truncated using the `normalize` or `round_dp` functions.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":449,"byte_end":509,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":510,"byte_end":513,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":514,"byte_end":526,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":527,"byte_end":530,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Decimal numbers can be created in a few distinct ways, depending","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":531,"byte_end":599,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! on the rust compiler version you're targeting.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":600,"byte_end":650,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":651,"byte_end":654,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! The stable version of rust requires you to create a Decimal number","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":655,"byte_end":725,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"! using one of it's convenience methods.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":726,"byte_end":768,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":769,"byte_end":772,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":773,"byte_end":784,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"! use rust_decimal::prelude::*;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":785,"byte_end":818,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":819,"byte_end":822,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! // Using an integer followed by the decimal points","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":823,"byte_end":877,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"! let scaled = Decimal::new(202, 2); // 2.02","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":878,"byte_end":924,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":925,"byte_end":928,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! // From a string representation","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":929,"byte_end":964,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"! let from_string = Decimal::from_str(\"2.02\").unwrap(); // 2.02","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":965,"byte_end":1030,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1031,"byte_end":1034,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! // Using the `Into` trait","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1035,"byte_end":1064,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"! let my_int : Decimal = 3i32.into();","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1065,"byte_end":1104,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! // Using the raw decimal representation","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1109,"byte_end":1152,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"! // 3.1415926535897932384626433832","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1153,"byte_end":1190,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"! let pi = Decimal::from_parts(1102470952, 185874565, 1703060790, false, 28);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1191,"byte_end":1270,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"! ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1271,"byte_end":1278,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1279,"byte_end":1282,"line_start":36,"line_end":36,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":3994,"byte_end":4009,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"UnpackedDecimal","qualname":"::decimal::UnpackedDecimal","value":"UnpackedDecimal { is_negative, scale, hi, mid, lo }","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" `UnpackedDecimal` contains unpacked representation of `Decimal` where each component\n of decimal-format stored in it's own field\n","sig":null,"attributes":[{"value":"/ `UnpackedDecimal` contains unpacked representation of `Decimal` where each component","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":3817,"byte_end":3905,"line_start":84,"line_end":84,"column_start":1,"column_end":89}},{"value":"/ of decimal-format stored in it's own field","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":3906,"byte_end":3952,"line_start":85,"line_end":85,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4020,"byte_end":4031,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"name":"is_negative","qualname":"::decimal::UnpackedDecimal::is_negative","value":"bool","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":365},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4047,"byte_end":4052,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"name":"scale","qualname":"::decimal::UnpackedDecimal::scale","value":"u32","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":366},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4067,"byte_end":4069,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"hi","qualname":"::decimal::UnpackedDecimal::hi","value":"u32","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4084,"byte_end":4087,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"name":"mid","qualname":"::decimal::UnpackedDecimal::mid","value":"u32","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4102,"byte_end":4104,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"name":"lo","qualname":"::decimal::UnpackedDecimal::lo","value":"u32","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4532,"byte_end":4539,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::decimal::Decimal","value":"Decimal {  }","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" `Decimal` represents a 128 bit representation of a fixed-precision decimal number.\n The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,\n where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer\n between 0 and 28 inclusive.\n","sig":null,"attributes":[{"value":"/ `Decimal` represents a 128 bit representation of a fixed-precision decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4114,"byte_end":4200,"line_start":95,"line_end":95,"column_start":1,"column_end":87}},{"value":"/ The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4201,"byte_end":4283,"line_start":96,"line_end":96,"column_start":1,"column_end":83}},{"value":"/ where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4284,"byte_end":4377,"line_start":97,"line_end":97,"column_start":1,"column_end":94}},{"value":"/ between 0 and 28 inclusive.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4378,"byte_end":4409,"line_start":98,"line_end":98,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":54},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5538,"byte_end":5553,"line_start":125,"line_end":125,"column_start":5,"column_end":20},"name":"BankersRounding","qualname":"::decimal::RoundingStrategy::BankersRounding","value":"RoundingStrategy::BankersRounding","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":56},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5559,"byte_end":5570,"line_start":126,"line_end":126,"column_start":5,"column_end":16},"name":"RoundHalfUp","qualname":"::decimal::RoundingStrategy::RoundHalfUp","value":"RoundingStrategy::RoundHalfUp","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":58},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5576,"byte_end":5589,"line_start":127,"line_end":127,"column_start":5,"column_end":18},"name":"RoundHalfDown","qualname":"::decimal::RoundingStrategy::RoundHalfDown","value":"RoundingStrategy::RoundHalfDown","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":60},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5595,"byte_end":5604,"line_start":128,"line_end":128,"column_start":5,"column_end":14},"name":"RoundDown","qualname":"::decimal::RoundingStrategy::RoundDown","value":"RoundingStrategy::RoundDown","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":62},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5610,"byte_end":5617,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"RoundUp","qualname":"::decimal::RoundingStrategy::RoundUp","value":"RoundingStrategy::RoundUp","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":53},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5515,"byte_end":5531,"line_start":124,"line_end":124,"column_start":10,"column_end":26},"name":"RoundingStrategy","qualname":"::decimal::RoundingStrategy","value":"RoundingStrategy::{BankersRounding, RoundHalfUp, RoundHalfDown, RoundDown, RoundUp}","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"decl_id":null,"docs":" `RoundingStrategy` represents the different strategies that can be used by\n `round_dp_with_strategy`.","sig":null,"attributes":[{"value":"/ `RoundingStrategy` represents the different strategies that can be used by","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":4937,"byte_end":5015,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ `round_dp_with_strategy`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5016,"byte_end":5045,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5046,"byte_end":5049,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ `RoundingStrategy::BankersRounding` - Rounds toward the nearest even number, e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5050,"byte_end":5154,"line_start":117,"line_end":117,"column_start":1,"column_end":105}},{"value":"/ `RoundingStrategy::RoundHalfUp` - Rounds up if the value >= 5, otherwise rounds down, e.g. 6.5 -> 7,","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5155,"byte_end":5259,"line_start":118,"line_end":118,"column_start":1,"column_end":105}},{"value":"/ `RoundingStrategy::RoundHalfDown` - Rounds down if the value =< 5, otherwise rounds up, e.g.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5260,"byte_end":5356,"line_start":119,"line_end":119,"column_start":1,"column_end":97}},{"value":"/ 6.5 -> 6, 6.51 -> 7","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5357,"byte_end":5380,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/ 1.4999999 -> 1","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5381,"byte_end":5399,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"/ `RoundingStrategy::RoundDown` - Always round down.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5400,"byte_end":5454,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"/ `RoundingStrategy::RoundUp` - Always round up.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5455,"byte_end":5505,"line_start":123,"line_end":123,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6137,"byte_end":6140,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"new","qualname":"<Decimal>::new","value":"fn (num: i64, scale: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","sig":null,"attributes":[{"value":"/ Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5661,"byte_end":5746,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5751,"byte_end":5754,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5759,"byte_end":5774,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5779,"byte_end":5782,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ * `num` - An i64 that represents the `m` portion of the decimal number","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5787,"byte_end":5861,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ * `scale` - A u32 representing the `e` portion of the decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5866,"byte_end":5939,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5944,"byte_end":5947,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5952,"byte_end":5965,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5970,"byte_end":5973,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5978,"byte_end":5985,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5990,"byte_end":6020,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6025,"byte_end":6028,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6033,"byte_end":6068,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(pi.to_string(), \"3.141\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6073,"byte_end":6113,"line_start":147,"line_end":147,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6118,"byte_end":6125,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7401,"byte_end":7421,"line_start":189,"line_end":189,"column_start":12,"column_end":32},"name":"from_i128_with_scale","qualname":"<Decimal>::from_i128_with_scale","value":"fn (num: i128, scale: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Decimal` using a 128 bit signed `m` representation and corresponding `e` scale.","sig":null,"attributes":[{"value":"/ Creates a `Decimal` using a 128 bit signed `m` representation and corresponding `e` scale.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6894,"byte_end":6988,"line_start":174,"line_end":174,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":6993,"byte_end":6996,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7001,"byte_end":7016,"line_start":176,"line_end":176,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7021,"byte_end":7024,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ * `num` - An i128 that represents the `m` portion of the decimal number","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7029,"byte_end":7104,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ * `scale` - A u32 representing the `e` portion of the decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7109,"byte_end":7182,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7187,"byte_end":7190,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7195,"byte_end":7208,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7213,"byte_end":7216,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7221,"byte_end":7228,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7233,"byte_end":7263,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7268,"byte_end":7271,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_i128_with_scale(3141i128, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7276,"byte_end":7332,"line_start":186,"line_end":186,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(pi.to_string(), \"3.141\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7337,"byte_end":7377,"line_start":187,"line_end":187,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":7382,"byte_end":7389,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8963,"byte_end":8973,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"name":"from_parts","qualname":"<Decimal>::from_parts","value":"fn (lo: u32, mid: u32, hi: u32, negative: bool, scale: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` using the instances constituent parts.","sig":null,"attributes":[{"value":"/ Returns a `Decimal` using the instances constituent parts.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8308,"byte_end":8370,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8375,"byte_end":8378,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8383,"byte_end":8398,"line_start":217,"line_end":217,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8403,"byte_end":8406,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `lo` - The low 32 bits of a 96-bit integer.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8411,"byte_end":8460,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ * `mid` - The middle 32 bits of a 96-bit integer.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8465,"byte_end":8518,"line_start":220,"line_end":220,"column_start":5,"column_end":58}},{"value":"/ * `hi` - The high 32 bits of a 96-bit integer.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8523,"byte_end":8573,"line_start":221,"line_end":221,"column_start":5,"column_end":55}},{"value":"/ * `negative` - `true` to indicate a negative number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8578,"byte_end":8634,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ * `scale` - A power of 10 ranging from 0 to 28.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8639,"byte_end":8690,"line_start":223,"line_end":223,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8695,"byte_end":8698,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8703,"byte_end":8716,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8721,"byte_end":8724,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8729,"byte_end":8736,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8741,"byte_end":8771,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8776,"byte_end":8779,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_parts(1102470952, 185874565, 1703060790, false, 28);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8784,"byte_end":8863,"line_start":230,"line_end":230,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(pi.to_string(), \"3.1415926535897932384626433832\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8868,"byte_end":8933,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":8938,"byte_end":8945,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9637,"byte_end":9652,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"from_scientific","qualname":"<Decimal>::from_scientific","value":"fn (value: &str) -> Result<Decimal, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Result` which if successful contains the `Decimal` constitution of\n the scientific notation provided by `value`.","sig":null,"attributes":[{"value":"/ Returns a `Result` which if successful contains the `Decimal` constitution of","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9174,"byte_end":9255,"line_start":242,"line_end":242,"column_start":5,"column_end":86}},{"value":"/ the scientific notation provided by `value`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9260,"byte_end":9308,"line_start":243,"line_end":243,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9313,"byte_end":9316,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9321,"byte_end":9336,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9341,"byte_end":9344,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ * `value` - The scientific notation of the `Decimal`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9349,"byte_end":9406,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9411,"byte_end":9414,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9419,"byte_end":9432,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9437,"byte_end":9440,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9445,"byte_end":9452,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9457,"byte_end":9487,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9492,"byte_end":9495,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let value = Decimal::from_scientific(\"9.7e-7\").unwrap();","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9500,"byte_end":9560,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(value.to_string(), \"0.00000097\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9565,"byte_end":9613,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":9618,"byte_end":9625,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10805,"byte_end":10810,"line_start":293,"line_end":293,"column_start":18,"column_end":23},"name":"scale","qualname":"<Decimal>::scale","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scale of the decimal number, otherwise known as `e`.","sig":null,"attributes":[{"value":"/ Returns the scale of the decimal number, otherwise known as `e`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10524,"byte_end":10592,"line_start":282,"line_end":282,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10597,"byte_end":10600,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10605,"byte_end":10618,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10623,"byte_end":10626,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10631,"byte_end":10638,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10643,"byte_end":10673,"line_start":287,"line_end":287,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10678,"byte_end":10681,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(1234, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10686,"byte_end":10722,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.scale(), 3u32);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10727,"byte_end":10761,"line_start":290,"line_end":290,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10766,"byte_end":10773,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10778,"byte_end":10787,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11381,"byte_end":11389,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"set_sign","qualname":"<Decimal>::set_sign","value":"fn (&mut self, positive: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10896,"byte_end":10962,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10967,"byte_end":10970,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10975,"byte_end":10990,"line_start":299,"line_end":299,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":10995,"byte_end":10998,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ * `positive`: true if the resulting decimal should be positive.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11003,"byte_end":11070,"line_start":301,"line_end":301,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11075,"byte_end":11078,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11083,"byte_end":11096,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11101,"byte_end":11104,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11109,"byte_end":11116,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11121,"byte_end":11151,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11156,"byte_end":11159,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11164,"byte_end":11201,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/ one.set_sign(false);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11206,"byte_end":11230,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11235,"byte_end":11273,"line_start":310,"line_end":310,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11278,"byte_end":11285,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"1.4.0\", note =\n             \"please use `set_sign_positive` instead\")","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11290,"byte_end":11369,"line_start":312,"line_end":312,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11904,"byte_end":11921,"line_start":333,"line_end":333,"column_start":12,"column_end":29},"name":"set_sign_positive","qualname":"<Decimal>::set_sign_positive","value":"fn (&mut self, positive: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11472,"byte_end":11538,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11543,"byte_end":11546,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11551,"byte_end":11566,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11571,"byte_end":11574,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ * `positive`: true if the resulting decimal should be positive.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11579,"byte_end":11646,"line_start":321,"line_end":321,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11651,"byte_end":11654,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11659,"byte_end":11672,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11677,"byte_end":11680,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11685,"byte_end":11692,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11697,"byte_end":11727,"line_start":326,"line_end":326,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11732,"byte_end":11735,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11740,"byte_end":11777,"line_start":328,"line_end":328,"column_start":5,"column_end":42}},{"value":"/ one.set_sign_positive(false);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11782,"byte_end":11815,"line_start":329,"line_end":329,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11820,"byte_end":11858,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11863,"byte_end":11870,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":11875,"byte_end":11892,"line_start":332,"line_end":332,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12518,"byte_end":12535,"line_start":357,"line_end":357,"column_start":12,"column_end":29},"name":"set_sign_negative","qualname":"<Decimal>::set_sign_negative","value":"fn (&mut self, negative: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12087,"byte_end":12153,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12158,"byte_end":12161,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12166,"byte_end":12181,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12186,"byte_end":12189,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ * `negative`: true if the resulting decimal should be negative.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12194,"byte_end":12261,"line_start":345,"line_end":345,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12266,"byte_end":12269,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12274,"byte_end":12287,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12292,"byte_end":12295,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12300,"byte_end":12307,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12312,"byte_end":12342,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12347,"byte_end":12350,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12355,"byte_end":12392,"line_start":352,"line_end":352,"column_start":5,"column_end":42}},{"value":"/ one.set_sign_negative(true);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12397,"byte_end":12429,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12434,"byte_end":12472,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12477,"byte_end":12484,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12489,"byte_end":12506,"line_start":356,"line_end":356,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12998,"byte_end":13007,"line_start":376,"line_end":376,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<Decimal>::set_scale","value":"fn (&mut self, scale: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the scale of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the scale of a decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12619,"byte_end":12686,"line_start":361,"line_end":361,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12691,"byte_end":12694,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12699,"byte_end":12714,"line_start":363,"line_end":363,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12719,"byte_end":12722,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ * `scale`: the new scale of the number","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12727,"byte_end":12769,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12774,"byte_end":12777,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12782,"byte_end":12795,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12800,"byte_end":12803,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12808,"byte_end":12815,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12820,"byte_end":12850,"line_start":370,"line_end":370,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12855,"byte_end":12858,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12863,"byte_end":12900,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ one.set_scale(5);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12905,"byte_end":12926,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(one.to_string(), \"0.00001\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12931,"byte_end":12974,"line_start":374,"line_end":374,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":12979,"byte_end":12986,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14203,"byte_end":14210,"line_start":408,"line_end":408,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Decimal>::rescale","value":"fn (&mut self, scale: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `Decimal` to the given scale, attempting to do so without changing the\n underlying number itself.","sig":null,"attributes":[{"value":"/ Modifies the `Decimal` to the given scale, attempting to do so without changing the","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13268,"byte_end":13355,"line_start":384,"line_end":384,"column_start":5,"column_end":92}},{"value":"/ underlying number itself.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13360,"byte_end":13389,"line_start":385,"line_end":385,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13394,"byte_end":13397,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that setting the scale to something less then the current `Decimal`s scale will","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13402,"byte_end":13490,"line_start":387,"line_end":387,"column_start":5,"column_end":93}},{"value":"/ cause the newly created `Decimal` to have some rounding.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13495,"byte_end":13555,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ Scales greater than the maximum precision supported by `Decimal` will be automatically","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13560,"byte_end":13650,"line_start":389,"line_end":389,"column_start":5,"column_end":95}},{"value":"/ rounded to `Decimal::MAX_PRECISION`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13655,"byte_end":13695,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/ Rounding leverages the half up strategy.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13700,"byte_end":13744,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13749,"byte_end":13752,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13757,"byte_end":13772,"line_start":393,"line_end":393,"column_start":5,"column_end":20}},{"value":"/ * `scale`: The scale to use for the new `Decimal` number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13777,"byte_end":13838,"line_start":394,"line_end":394,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13843,"byte_end":13846,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13851,"byte_end":13864,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13869,"byte_end":13872,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13877,"byte_end":13884,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13889,"byte_end":13919,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13924,"byte_end":13927,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let mut number = Decimal::new(1_123, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13932,"byte_end":13976,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ number.rescale(6);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":13981,"byte_end":14003,"line_start":402,"line_end":402,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(number, Decimal::new(1_123_000, 6));","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14008,"byte_end":14059,"line_start":403,"line_end":403,"column_start":5,"column_end":56}},{"value":"/ let mut round = Decimal::new(145, 2);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14064,"byte_end":14105,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ round.rescale(1);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14110,"byte_end":14131,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(round, Decimal::new(15, 1));","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14136,"byte_end":14179,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14184,"byte_end":14191,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14863,"byte_end":14872,"line_start":425,"line_end":425,"column_start":18,"column_end":27},"name":"serialize","qualname":"<Decimal>::serialize","value":"fn (&self) -> [u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns a serialized version of the decimal number.\n The resulting byte array will have the following representation:","sig":null,"attributes":[{"value":"/ Returns a serialized version of the decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14559,"byte_end":14614,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/ The resulting byte array will have the following representation:","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14619,"byte_end":14687,"line_start":419,"line_end":419,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14692,"byte_end":14695,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ * Bytes 1-4: flags","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14700,"byte_end":14722,"line_start":421,"line_end":421,"column_start":5,"column_end":27}},{"value":"/ * Bytes 5-8: lo portion of `m`","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14727,"byte_end":14761,"line_start":422,"line_end":422,"column_start":5,"column_end":39}},{"value":"/ * Bytes 9-12: mid portion of `m`","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14766,"byte_end":14802,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ * Bytes 13-16: high portion of `m`","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":14807,"byte_end":14845,"line_start":424,"line_end":424,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15990,"byte_end":16001,"line_start":453,"line_end":453,"column_start":18,"column_end":29},"name":"deserialize","qualname":"<Decimal>::deserialize","value":"fn (bytes: [u8; 16]) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the given bytes into a decimal number.\n The deserialized byte representation must be 16 bytes and adhere to the followign convention:","sig":null,"attributes":[{"value":"/ Deserializes the given bytes into a decimal number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15657,"byte_end":15712,"line_start":446,"line_end":446,"column_start":5,"column_end":60}},{"value":"/ The deserialized byte representation must be 16 bytes and adhere to the followign convention:","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15717,"byte_end":15814,"line_start":447,"line_end":447,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15819,"byte_end":15822,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ * Bytes 1-4: flags","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15827,"byte_end":15849,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/ * Bytes 5-8: lo portion of `m`","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15854,"byte_end":15888,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ * Bytes 9-12: mid portion of `m`","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15893,"byte_end":15929,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/ * Bytes 13-16: high portion of `m`","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":15934,"byte_end":15972,"line_start":452,"line_end":452,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16670,"byte_end":16681,"line_start":464,"line_end":464,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Decimal>::is_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the decimal is negative.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16529,"byte_end":16575,"line_start":462,"line_end":462,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_negative` instead\")","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16580,"byte_end":16658,"line_start":463,"line_end":463,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16883,"byte_end":16894,"line_start":470,"line_end":470,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Decimal>::is_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the decimal is positive.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16742,"byte_end":16788,"line_start":468,"line_end":468,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_positive` instead\")","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16793,"byte_end":16871,"line_start":469,"line_end":469,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17057,"byte_end":17073,"line_start":476,"line_end":476,"column_start":18,"column_end":34},"name":"is_sign_negative","qualname":"<Decimal>::is_sign_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the sign bit of the decimal is negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the sign bit of the decimal is negative.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":16955,"byte_end":17017,"line_start":474,"line_end":474,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17022,"byte_end":17039,"line_start":475,"line_end":475,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17239,"byte_end":17255,"line_start":482,"line_end":482,"column_start":18,"column_end":34},"name":"is_sign_positive","qualname":"<Decimal>::is_sign_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the sign bit of the decimal is positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the sign bit of the decimal is positive.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17137,"byte_end":17199,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17204,"byte_end":17221,"line_start":481,"line_end":481,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17407,"byte_end":17416,"line_start":487,"line_end":487,"column_start":18,"column_end":27},"name":"min_value","qualname":"<Decimal>::min_value","value":"fn () -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum possible number that `Decimal` can represent.\n","sig":null,"attributes":[{"value":"/ Returns the minimum possible number that `Decimal` can represent.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17320,"byte_end":17389,"line_start":486,"line_end":486,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17542,"byte_end":17551,"line_start":492,"line_end":492,"column_start":18,"column_end":27},"name":"max_value","qualname":"<Decimal>::max_value","value":"fn () -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum possible number that `Decimal` can represent.\n","sig":null,"attributes":[{"value":"/ Returns the maximum possible number that `Decimal` can represent.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17455,"byte_end":17524,"line_start":491,"line_end":491,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17996,"byte_end":18001,"line_start":509,"line_end":509,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Decimal>::trunc","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` integral with no fractional portion.\n This is a true truncation whereby no rounding is performed.","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` integral with no fractional portion.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17590,"byte_end":17654,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/ This is a true truncation whereby no rounding is performed.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17659,"byte_end":17722,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17727,"byte_end":17730,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17735,"byte_end":17748,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17753,"byte_end":17756,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17761,"byte_end":17768,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17773,"byte_end":17803,"line_start":502,"line_end":502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17808,"byte_end":17811,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17816,"byte_end":17851,"line_start":504,"line_end":504,"column_start":5,"column_end":40}},{"value":"/ let trunc = Decimal::new(3, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17856,"byte_end":17891,"line_start":505,"line_end":505,"column_start":5,"column_end":40}},{"value":"/ // note that it returns a decimal","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17896,"byte_end":17933,"line_start":506,"line_end":506,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(pi.trunc(), trunc);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17938,"byte_end":17972,"line_start":507,"line_end":507,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":17977,"byte_end":17984,"line_start":508,"line_end":508,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19139,"byte_end":19144,"line_start":547,"line_end":547,"column_start":12,"column_end":17},"name":"fract","qualname":"<Decimal>::fract","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` representing the fractional portion of the number.","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` representing the fractional portion of the number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18785,"byte_end":18863,"line_start":535,"line_end":535,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18868,"byte_end":18871,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18876,"byte_end":18889,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18894,"byte_end":18897,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18902,"byte_end":18909,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18914,"byte_end":18944,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18949,"byte_end":18952,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18957,"byte_end":18992,"line_start":542,"line_end":542,"column_start":5,"column_end":40}},{"value":"/ let fract = Decimal::new(141, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":18997,"byte_end":19034,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ // note that it returns a decimal","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19039,"byte_end":19076,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(pi.fract(), fract);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19081,"byte_end":19115,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19120,"byte_end":19127,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19578,"byte_end":19581,"line_start":563,"line_end":563,"column_start":12,"column_end":15},"name":"abs","qualname":"<Decimal>::abs","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19329,"byte_end":19371,"line_start":553,"line_end":553,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19376,"byte_end":19379,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19384,"byte_end":19397,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19402,"byte_end":19405,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19410,"byte_end":19417,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19422,"byte_end":19452,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19457,"byte_end":19460,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(-3141, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19465,"byte_end":19502,"line_start":560,"line_end":560,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(num.abs().to_string(), \"3.141\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19507,"byte_end":19554,"line_start":561,"line_end":561,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19559,"byte_end":19566,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19955,"byte_end":19960,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"floor","qualname":"<Decimal>::floor","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19688,"byte_end":19751,"line_start":569,"line_end":569,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19756,"byte_end":19759,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19764,"byte_end":19777,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19782,"byte_end":19785,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19790,"byte_end":19797,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19802,"byte_end":19832,"line_start":574,"line_end":574,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19837,"byte_end":19840,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(3641, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19845,"byte_end":19881,"line_start":576,"line_end":576,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.floor().to_string(), \"3\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19886,"byte_end":19931,"line_start":577,"line_end":577,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":19936,"byte_end":19943,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20702,"byte_end":20706,"line_start":607,"line_end":607,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Decimal>::ceil","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20345,"byte_end":20412,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20417,"byte_end":20420,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20425,"byte_end":20438,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20443,"byte_end":20446,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20451,"byte_end":20458,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20463,"byte_end":20493,"line_start":600,"line_end":600,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20498,"byte_end":20501,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(3141, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20506,"byte_end":20542,"line_start":602,"line_end":602,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.ceil().to_string(), \"4\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20547,"byte_end":20591,"line_start":603,"line_end":603,"column_start":5,"column_end":49}},{"value":"/ let num = Decimal::new(3, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20596,"byte_end":20629,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(num.ceil().to_string(), \"3\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20634,"byte_end":20678,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":20683,"byte_end":20690,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21300,"byte_end":21303,"line_start":631,"line_end":631,"column_start":12,"column_end":15},"name":"max","qualname":"<Decimal>::max","value":"fn (self, other: Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21065,"byte_end":21108,"line_start":622,"line_end":622,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21113,"byte_end":21116,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21121,"byte_end":21128,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21133,"byte_end":21163,"line_start":625,"line_end":625,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21168,"byte_end":21171,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ let x = Decimal::new(1, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21176,"byte_end":21207,"line_start":627,"line_end":627,"column_start":5,"column_end":36}},{"value":"/ let y = Decimal::new(2, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21212,"byte_end":21243,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(y, x.max(y));","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21248,"byte_end":21276,"line_start":629,"line_end":629,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21281,"byte_end":21288,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21681,"byte_end":21684,"line_start":648,"line_end":648,"column_start":12,"column_end":15},"name":"min","qualname":"<Decimal>::min","value":"fn (self, other: Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21446,"byte_end":21489,"line_start":639,"line_end":639,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21494,"byte_end":21497,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21502,"byte_end":21509,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21514,"byte_end":21544,"line_start":642,"line_end":642,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21549,"byte_end":21552,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ let x = Decimal::new(1, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21557,"byte_end":21588,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/ let y = Decimal::new(2, 0);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21593,"byte_end":21624,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(x, x.min(y));","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21629,"byte_end":21657,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21662,"byte_end":21669,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":22179,"byte_end":22188,"line_start":667,"line_end":667,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Decimal>::normalize","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Strips any trailing zero's from a `Decimal` and converts -0 to 0.","sig":null,"attributes":[{"value":"/ Strips any trailing zero's from a `Decimal` and converts -0 to 0.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21827,"byte_end":21896,"line_start":656,"line_end":656,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21901,"byte_end":21904,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21909,"byte_end":21922,"line_start":658,"line_end":658,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21927,"byte_end":21930,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21935,"byte_end":21942,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21947,"byte_end":21977,"line_start":661,"line_end":661,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21982,"byte_end":21985,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let number = Decimal::new(3100, 3);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":21990,"byte_end":22029,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ // note that it returns a decimal, without the extra scale","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":22034,"byte_end":22096,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(number.normalize().to_string(), \"3.1\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":22101,"byte_end":22155,"line_start":665,"line_end":665,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":22160,"byte_end":22167,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23474,"byte_end":23479,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"round","qualname":"<Decimal>::round","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with no fractional portion (i.e. an integer).\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with no fractional portion (i.e. an integer).","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":22943,"byte_end":23023,"line_start":696,"line_end":696,"column_start":5,"column_end":85}},{"value":"/ Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23028,"byte_end":23108,"line_start":697,"line_end":697,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23113,"byte_end":23116,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23121,"byte_end":23134,"line_start":699,"line_end":699,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23139,"byte_end":23142,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23147,"byte_end":23154,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23159,"byte_end":23189,"line_start":702,"line_end":702,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23194,"byte_end":23197,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ // Demonstrating bankers rounding...","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23202,"byte_end":23242,"line_start":704,"line_end":704,"column_start":5,"column_end":45}},{"value":"/ let number_down = Decimal::new(65, 1);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23247,"byte_end":23289,"line_start":705,"line_end":705,"column_start":5,"column_end":47}},{"value":"/ let number_up   = Decimal::new(75, 1);","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23294,"byte_end":23336,"line_start":706,"line_end":706,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(number_down.round().to_string(), \"6\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23341,"byte_end":23394,"line_start":707,"line_end":707,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(number_up.round().to_string(), \"8\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23399,"byte_end":23450,"line_start":708,"line_end":708,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23455,"byte_end":23462,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":24179,"byte_end":24201,"line_start":731,"line_end":731,"column_start":12,"column_end":34},"name":"round_dp_with_strategy","qualname":"<Decimal>::round_dp_with_strategy","value":"fn (&self, dp: u32, strategy: RoundingStrategy) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional\n portion.\n Rounding is performed using the provided [`RoundingStrategy`]","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with the specified number of decimal points for fractional","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23536,"byte_end":23629,"line_start":714,"line_end":714,"column_start":5,"column_end":98}},{"value":"/ portion.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23634,"byte_end":23646,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/ Rounding is performed using the provided [`RoundingStrategy`]","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23651,"byte_end":23716,"line_start":716,"line_end":716,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23721,"byte_end":23724,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23729,"byte_end":23744,"line_start":718,"line_end":718,"column_start":5,"column_end":20}},{"value":"/ * `dp`: the number of decimal points to round to.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23749,"byte_end":23802,"line_start":719,"line_end":719,"column_start":5,"column_end":58}},{"value":"/ * `strategy`: the [`RoundingStrategy`] to use.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23807,"byte_end":23857,"line_start":720,"line_end":720,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23862,"byte_end":23865,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23870,"byte_end":23883,"line_start":722,"line_end":722,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23888,"byte_end":23891,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23896,"byte_end":23903,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::{Decimal, RoundingStrategy};","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23908,"byte_end":23958,"line_start":725,"line_end":725,"column_start":5,"column_end":55}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23963,"byte_end":23989,"line_start":726,"line_end":726,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":23994,"byte_end":23997,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let tax = Decimal::from_str(\"3.4395\").unwrap();","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":24002,"byte_end":24053,"line_start":728,"line_end":728,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(tax.round_dp_with_strategy(2, RoundingStrategy::RoundHalfUp).to_string(), \"3.44\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":24058,"byte_end":24155,"line_start":729,"line_end":729,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":24160,"byte_end":24167,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29359,"byte_end":29367,"line_start":877,"line_end":877,"column_start":12,"column_end":20},"name":"round_dp","qualname":"<Decimal>::round_dp","value":"fn (&self, dp: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional portion.\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with the specified number of decimal points for fractional portion.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":28807,"byte_end":28909,"line_start":862,"line_end":862,"column_start":5,"column_end":107}},{"value":"/ Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":28914,"byte_end":28994,"line_start":863,"line_end":863,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":28999,"byte_end":29002,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29007,"byte_end":29022,"line_start":865,"line_end":865,"column_start":5,"column_end":20}},{"value":"/ * `dp`: the number of decimal points to round to.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29027,"byte_end":29080,"line_start":866,"line_end":866,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29085,"byte_end":29088,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29093,"byte_end":29106,"line_start":868,"line_end":868,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29111,"byte_end":29114,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29119,"byte_end":29126,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29131,"byte_end":29161,"line_start":871,"line_end":871,"column_start":5,"column_end":35}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29166,"byte_end":29192,"line_start":872,"line_end":872,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29197,"byte_end":29200,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_str(\"3.1415926535897932384626433832\").unwrap();","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29205,"byte_end":29279,"line_start":874,"line_end":874,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pi.round_dp(2).to_string(), \"3.14\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29284,"byte_end":29335,"line_start":875,"line_end":875,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29340,"byte_end":29347,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":30301,"byte_end":30307,"line_start":900,"line_end":900,"column_start":18,"column_end":24},"name":"unpack","qualname":"<Decimal>::unpack","value":"fn (&self) -> UnpackedDecimal","parent":null,"children":[],"decl_id":null,"docs":" Convert `Decimal` to an internal representation of the underlying struct. This is useful\n for debugging the internal state of the object.","sig":null,"attributes":[{"value":"/ Convert `Decimal` to an internal representation of the underlying struct. This is useful","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29483,"byte_end":29575,"line_start":881,"line_end":881,"column_start":5,"column_end":97}},{"value":"/ for debugging the internal state of the object.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29580,"byte_end":29631,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29636,"byte_end":29639,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Important Disclaimer","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29644,"byte_end":29670,"line_start":884,"line_end":884,"column_start":5,"column_end":31}},{"value":"/ This is primarily intended for library maintainers. The internal representation of a","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29675,"byte_end":29763,"line_start":885,"line_end":885,"column_start":5,"column_end":93}},{"value":"/ `Decimal` is considered \"unstable\" for public use.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29768,"byte_end":29822,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29827,"byte_end":29830,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29835,"byte_end":29848,"line_start":888,"line_end":888,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29853,"byte_end":29856,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29861,"byte_end":29868,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29873,"byte_end":29903,"line_start":891,"line_end":891,"column_start":5,"column_end":35}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29908,"byte_end":29934,"line_start":892,"line_end":892,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29939,"byte_end":29942,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_str(\"3.1415926535897932384626433832\").unwrap();","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":29947,"byte_end":30021,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(format!(\"{:?}\", pi), \"3.1415926535897932384626433832\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":30026,"byte_end":30096,"line_start":895,"line_end":895,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(format!(\"{:?}\", pi.unpack()), \"UnpackedDecimal { \\","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":30101,"byte_end":30166,"line_start":896,"line_end":896,"column_start":5,"column_end":70}},{"value":"/     is_negative: false, scale: 28, hi: 1703060790, mid: 185874565, lo: 1102470952 \\","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":30171,"byte_end":30258,"line_start":897,"line_end":897,"column_start":5,"column_end":92}},{"value":"/ }\");","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":30263,"byte_end":30271,"line_start":898,"line_end":898,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":30276,"byte_end":30283,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":37439,"byte_end":37450,"line_start":1080,"line_end":1080,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Decimal>::checked_add","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked addition. Computes `self + other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked addition. Computes `self + other`, returning `None` if overflow occurred.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":37320,"byte_end":37405,"line_start":1078,"line_end":1078,"column_start":5,"column_end":90}},{"value":"inline(always)","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":37410,"byte_end":37427,"line_start":1079,"line_end":1079,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":40019,"byte_end":40030,"line_start":1157,"line_end":1157,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Decimal>::checked_sub","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":39897,"byte_end":39985,"line_start":1155,"line_end":1155,"column_start":5,"column_end":93}},{"value":"inline(always)","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":39990,"byte_end":40007,"line_start":1156,"line_end":1156,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":40415,"byte_end":40426,"line_start":1169,"line_end":1169,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal>::checked_mul","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":40298,"byte_end":40389,"line_start":1167,"line_end":1167,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":40394,"byte_end":40403,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":47813,"byte_end":47824,"line_start":1342,"line_end":1342,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Decimal>::checked_div","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the\n division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":47675,"byte_end":47763,"line_start":1340,"line_end":1340,"column_start":5,"column_end":93}},{"value":"/ division results in overflow.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":47768,"byte_end":47801,"line_start":1341,"line_end":1341,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":52453,"byte_end":52464,"line_start":1471,"line_end":1471,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Decimal>::checked_rem","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.\n","sig":null,"attributes":[{"value":"/ Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":52358,"byte_end":52441,"line_start":1470,"line_end":1470,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":457},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":104835,"byte_end":104840,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":458}],"decl_id":null,"docs":" Error type for the library.\n","sig":null,"attributes":[{"value":"/ Error type for the library.","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":104768,"byte_end":104799,"line_start":3,"line_end":3,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":353},"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","byte_start":1497,"byte_end":1504,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":362}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5647,"byte_end":5654,"line_start":133,"line_end":133,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":54279,"byte_end":54286,"line_start":1520,"line_end":1520,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":73179,"byte_end":73186,"line_start":2131,"line_end":2131,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":73454,"byte_end":73461,"line_start":2146,"line_end":2146,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":73623,"byte_end":73630,"line_start":2157,"line_end":2157,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":74295,"byte_end":74302,"line_start":2191,"line_end":2191,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":84029,"byte_end":84036,"line_start":2461,"line_end":2461,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":84198,"byte_end":84205,"line_start":2469,"line_end":2469,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":88727,"byte_end":88734,"line_start":2617,"line_end":2617,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":90332,"byte_end":90339,"line_start":2671,"line_end":2671,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":92342,"byte_end":92349,"line_start":2727,"line_end":2727,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":92479,"byte_end":92486,"line_start":2733,"line_end":2733,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":93193,"byte_end":93200,"line_start":2768,"line_end":2768,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":93457,"byte_end":93464,"line_start":2778,"line_end":2778,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":94232,"byte_end":94239,"line_start":2810,"line_end":2810,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":94496,"byte_end":94503,"line_start":2820,"line_end":2820,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":95266,"byte_end":95273,"line_start":2852,"line_end":2852,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":95530,"byte_end":95537,"line_start":2862,"line_end":2862,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":96365,"byte_end":96372,"line_start":2894,"line_end":2894,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":96629,"byte_end":96636,"line_start":2904,"line_end":2904,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":97388,"byte_end":97395,"line_start":2936,"line_end":2936,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":97652,"byte_end":97659,"line_start":2946,"line_end":2946,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98088,"byte_end":98095,"line_start":2964,"line_end":2964,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98210,"byte_end":98217,"line_start":2971,"line_end":2971,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98236,"byte_end":98243,"line_start":2973,"line_end":2973,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98464,"byte_end":98471,"line_start":2983,"line_end":2983,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98605,"byte_end":98612,"line_start":2990,"line_end":2990,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":100416,"byte_end":100423,"line_start":3043,"line_end":3043,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":104872,"byte_end":104877,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":105249,"byte_end":105254,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":105346,"byte_end":105351,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","byte_start":105659,"byte_end":105666,"line_start":10,"line_end":10,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","byte_start":106521,"byte_end":106535,"line_start":41,"line_end":41,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","byte_start":107829,"byte_end":107836,"line_start":86,"line_end":86,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":5647,"byte_end":5654,"line_start":133,"line_end":133,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":54279,"byte_end":54286,"line_start":1520,"line_end":1520,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":73179,"byte_end":73186,"line_start":2131,"line_end":2131,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":374},"to":{"krate":15,"index":302}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":73454,"byte_end":73461,"line_start":2146,"line_end":2146,"column_start":14,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":374},"to":{"krate":15,"index":312}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":73623,"byte_end":73630,"line_start":2157,"line_end":2157,"column_start":17,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":374},"to":{"krate":15,"index":564}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":74295,"byte_end":74302,"line_start":2191,"line_end":2191,"column_start":14,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":374},"to":{"krate":15,"index":589}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":84029,"byte_end":84036,"line_start":2461,"line_end":2461,"column_start":18,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":84198,"byte_end":84205,"line_start":2469,"line_end":2469,"column_start":24,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":374},"to":{"krate":15,"index":151}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":88727,"byte_end":88734,"line_start":2617,"line_end":2617,"column_start":22,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":374},"to":{"krate":15,"index":125}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":90332,"byte_end":90339,"line_start":2671,"line_end":2671,"column_start":23,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":92342,"byte_end":92349,"line_start":2727,"line_end":2727,"column_start":21,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":92479,"byte_end":92486,"line_start":2733,"line_end":2733,"column_start":14,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1995}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":93193,"byte_end":93200,"line_start":2768,"line_end":2768,"column_start":20,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":93457,"byte_end":93464,"line_start":2778,"line_end":2778,"column_start":37,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":94232,"byte_end":94239,"line_start":2810,"line_end":2810,"column_start":20,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":94496,"byte_end":94503,"line_start":2820,"line_end":2820,"column_start":37,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":95266,"byte_end":95273,"line_start":2852,"line_end":2852,"column_start":20,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":95530,"byte_end":95537,"line_start":2862,"line_end":2862,"column_start":37,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":96365,"byte_end":96372,"line_start":2894,"line_end":2894,"column_start":20,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":96629,"byte_end":96636,"line_start":2904,"line_end":2904,"column_start":37,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":97388,"byte_end":97395,"line_start":2936,"line_end":2936,"column_start":20,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2015}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":97652,"byte_end":97659,"line_start":2946,"line_end":2946,"column_start":37,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2015}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98088,"byte_end":98095,"line_start":2964,"line_end":2964,"column_start":20,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98210,"byte_end":98217,"line_start":2971,"line_end":2971,"column_start":13,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98236,"byte_end":98243,"line_start":2973,"line_end":2973,"column_start":15,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98464,"byte_end":98471,"line_start":2983,"line_end":2983,"column_start":21,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":98605,"byte_end":98612,"line_start":2990,"line_end":2990,"column_start":14,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/decimal.rs","byte_start":100416,"byte_end":100423,"line_start":3043,"line_end":3043,"column_start":14,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":4834}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":104872,"byte_end":104877,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":105249,"byte_end":105254,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":457},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/error.rs","byte_start":105346,"byte_end":105351,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","byte_start":105659,"byte_end":105666,"line_start":10,"line_end":10,"column_start":39,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":374},"to":{"krate":16,"index":1191}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","byte_start":106521,"byte_end":106535,"line_start":41,"line_end":41,"column_start":39,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":329},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/raka/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.7.0/src/serde_types.rs","byte_start":107829,"byte_end":107836,"line_start":86,"line_end":86,"column_start":27,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":374},"to":{"krate":16,"index":1679}}]}